{"ast":null,"code":"var _jsxFileName = \"/Users/eunjihwang/study/react-typescript/src/state/UserSearch.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst users = [{\n  name: 'Sarah',\n  age: 30\n}, {\n  name: 'alex',\n  age: 34\n}, {\n  name: 'lea',\n  age: 20\n}];\n\nconst UserSearch = () => {\n  _s();\n\n  const [name, setName] = useState(''); // 두가지의 경우가 있기 때문에 < \\ > 으로 써놓음\n\n  const [user, setUser] = useState();\n\n  const onClick = () => {\n    const foundUser = users.find(user => {\n      return user.name === name;\n    }); // 결과는 undefiend 될 수도, 값이 될 수도\n\n    console.log(foundUser);\n    setUser(foundUser);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"UserSearch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), user && user.name, user && user.name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserSearch, \"mHCYKIcn1ZXb/wvxTuJELlWYiw8=\");\n\n_c = UserSearch;\nexport default UserSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSearch\");","map":{"version":3,"sources":["/Users/eunjihwang/study/react-typescript/src/state/UserSearch.tsx"],"names":["useState","users","name","age","UserSearch","setName","user","setUser","onClick","foundUser","find","console","log","e","target","value"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,KAAK,GAAG,CACZ;AACEC,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,GAAG,EAAE;AAFP,CADY,EAKZ;AACED,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,GAAG,EAAE;AAFP,CALY,EASZ;AACED,EAAAA,IAAI,EAAE,KADR;AAEEC,EAAAA,GAAG,EAAE;AAFP,CATY,CAAd;;AAeA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACF,IAAD,EAAOG,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC,CADiC,CAEjC;;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;;AAEA,QAAMQ,OAAO,GAAG,MAAM;AACpB,UAAMC,SAAS,GAAGR,KAAK,CAACS,IAAN,CAAYJ,IAAD,IAAU;AACrC,aAAOA,IAAI,CAACJ,IAAL,KAAcA,IAArB;AACD,KAFiB,CAAlB,CADoB,CAIpB;;AAEAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACAF,IAAAA,OAAO,CAACE,SAAD,CAAP;AACD,GARD;;AASA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,KAAK,EAAEP,IAAd;AAAoB,MAAA,QAAQ,EAAGW,CAAD,IAAOR,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AAA5C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEP,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGF,IAAI,IAAIA,IAAI,CAACJ,IAJhB,EAKGI,IAAI,IAAIA,IAAI,CAACJ,IALhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAvBD;;GAAME,U;;KAAAA,U;AAyBN,eAAeA,UAAf","sourcesContent":["import { SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG } from 'node:constants';\nimport { useState } from 'react';\n\nconst users = [\n  {\n    name: 'Sarah',\n    age: 30,\n  },\n  {\n    name: 'alex',\n    age: 34,\n  },\n  {\n    name: 'lea',\n    age: 20,\n  },\n];\n\nconst UserSearch: React.FC = () => {\n  const [name, setName] = useState('');\n  // 두가지의 경우가 있기 때문에 < \\ > 으로 써놓음\n  const [user, setUser] = useState<{ name: string; age: number } | undefined>();\n\n  const onClick = () => {\n    const foundUser = users.find((user) => {\n      return user.name === name;\n    });\n    // 결과는 undefiend 될 수도, 값이 될 수도\n\n    console.log(foundUser);\n    setUser(foundUser);\n  };\n  return (\n    <div>\n      <h1>UserSearch</h1>\n      <input value={name} onChange={(e) => setName(e.target.value)}></input>\n      <button onClick={onClick}>Search</button>\n      {user && user.name}\n      {user && user.name}\n    </div>\n  );\n};\n\nexport default UserSearch;\n"]},"metadata":{},"sourceType":"module"}